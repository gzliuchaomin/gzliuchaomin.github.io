<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>http://shatle.gitee.io</id>
    <title>惊躁</title>
    <updated>2021-02-25T16:21:48.154Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="http://shatle.gitee.io"/>
    <link rel="self" href="http://shatle.gitee.io/atom.xml"/>
    <subtitle>惊躁中，平静下来吧</subtitle>
    <logo>http://shatle.gitee.io/images/avatar.png</logo>
    <icon>http://shatle.gitee.io/favicon.ico</icon>
    <rights>All rights reserved 2021, 惊躁</rights>
    <entry>
        <title type="html"><![CDATA[既得利益者的快乐]]></title>
        <id>http://shatle.gitee.io/post/ji-de-li-yi-zhe-de-kuai-le/</id>
        <link href="http://shatle.gitee.io/post/ji-de-li-yi-zhe-de-kuai-le/">
        </link>
        <updated>2020-11-08T13:22:49.000Z</updated>
        <content type="html"><![CDATA[<p>今天看了 基努·里维斯 主演的《Replicas》-- 克隆人。</p>
<figure data-type="image" tabindex="1"><img src="http://shatle.gitee.io/post-images/1604846342083.jpg" alt="" loading="lazy"></figure>
<p>电影是2018年上影的，但是我当时并没有看。在今天看完电影之后，搜索了当时的上影时的情况，票房并不好，影院给予的排片很少，估计原因是电影主题对克隆人的观点过于挑战世俗了吧。</p>
<p>大致说一下电影的梗概，毕竟现在网上已经有片源的，不会存在剧透的问题。</p>
<p>作为科学家的主角，在一家生物公司当主管，负责的项目是对人类意识上的克隆。画面的开始是对一位受伤的士兵进行意识的移植，移植到一个机器躯体上。当然，结果是失败的。士兵的意识移植到了躯体中，士兵能说话，但对现状表现出的狂暴的情绪。注意，这些的狂暴情绪，至少有两种可能：一，士兵对机器人的现状并不接受，或许士兵信仰是自然的生老病死；二、科学家对宿主意识没有进行很好的移植，比如情绪控制部分没有很好地处理。总之，这345号机器躯体的移植是失败的。</p>
<p>实验的失败，拥有一口之家的主角，在回到家里的时候，作为医生的妻子也对其工作的项目很有意见，觉得主角对人类的认知过于科学，认为人的意识就是化学的结果。主角并没有反驳，更多是沉默，主角是真科学家，也是个生活的深度理解者，避免和家人过于吵架。</p>
<p>不幸的是，在一次周末出游的过程中，主角的四个家人都去世了。主角对家人的爱是无可比拟的，所以让助手将公司的机器都搬到家里来，包括克隆身体的容器。在完善克隆意识的算法之后，主角逐个给家人克隆了意识。由于克隆的容器只有三个，所以主角在挣扎之后，暂时将小女儿的意识存了起来。这里有个科学前提，就是机器人技术和人体器官的克隆技术已经成熟，但人类意识的克隆技术还在完善，主角就是这类领域的科学家。</p>
<p>克隆的结果算是良好，尽管有些不适的情况，可能是身体和意识的结合情况不理想，或者是其它的什么，但从家人的反馈来看，至少意识层面上是可接受的。妻子从多次的状况中知道了家人上的问题，在拷问主角的时候，主角也大方的承认了家人是车祸去世之后克隆出来的。妻子在得知自己是克隆出来的之后，却表现平静，并没有起初的反对主角的项目那样激烈。</p>
<p>老板知道主角在家人上实验成功了之后，向主角要求得到意识移植的算法。然而，在老板抓到主角家人时，主角为了克隆的家人，义无反顾地回来救他们。由于主角提前将自己的意识复制了一份，并将其放到了实验体345号上。主角在将算法编写出来时，同时也激活了345号实验体，一个复制了主角意识的机器躯体，也因此拯救了家人。即将去世的老板也和主角达成了某些协议。</p>
<p>电影的最后，肉体主角和家人在海边团聚，而机器主角和克隆老板为迪拜老板作延续生命的生意。</p>
<p>克隆人对于电影，已经属于一个老主题了。现代的克隆实验上，受到了人类的条条框框的限制。虽然现在的科学，没有达到完整的克隆，只能达到胚胎级别上的肉体培养。因为这很容易打破自然法则，一个人可以通过克隆技术，不断地创造出一样的身体，不断地进行人生的洗涤。这一电影，并没有过多地渲染世俗道德与科学的冲突，但电影的开头也有镜头说什么什么协议。另外，从妻子的表现，也得知世俗对这一科学研究，是抱着谨慎的态度的。</p>
<p>然而，妻子在得知自己是克隆人之后，表现却是平静的。这就是既得利益者的快乐，欣然接受科学带来的好处。科学的道德界限，或者只是嘴上说说，或者只是评判别人的标准。</p>
<p>电影将克隆技术应用于事故的家人上，对于感情，这是十分合理的。或许，主角可以接受家人的生老病死，但并不愿意家人的过早离世。如果电影将克隆技术应用于军事领域，将一个熟练的飞行人员意识复制多份，应用于战争中，那将是另外的情景。</p>
<p>所以，人类本身并不是讨厌科学，并不是不想将克隆技术应用于人类，只是害怕这技术受到滥用，去进行不符合人类生存的行业中。而这种高科技，也终将是小部分人类拥有的权利，就如电影最后，它服务的终将是有钱人，或者是有权人。</p>
<p>笔者由此想到的是，基因的修改技术，现在或许已经在应用了吧。将人类基因上，已知的不好的基因去除，添加上可能良好的基因序列，这一技术也将是一小部分人的权利。他们或者他们的后代，终将会更加优秀，而底层的人民将会是继续为生活奔波。如果小部分人没有对此技术进行控制，当人类的整体知识水平都上来之后，此技术可能也会普惠于民众，或许也是人类的福音，让大家都可以成为既得利益者。想到最近有一位同事，做了眼睛的矫正手术，让自己解脱了眼镜的困扰。</p>
<p>再或者，基因改造技术存在着人类未知的风险，会给受用人带来潜在的风险，或许会将人类带向毁灭。就如电影中的情况一样，家人会有些不良的反应，生活中出现各种小毛病。</p>
<p>但最终，无论以何种方式，科学终会冲破障碍，引领人类前行。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[数据分页的逻辑和方法 - 阅读分享]]></title>
        <id>http://shatle.gitee.io/post/shu-ju-fen-ye-de-luo-ji-he-fang-fa-yue-du-fen-xiang/</id>
        <link href="http://shatle.gitee.io/post/shu-ju-fen-ye-de-luo-ji-he-fang-fa-yue-du-fen-xiang/">
        </link>
        <updated>2020-08-16T07:20:24.000Z</updated>
        <content type="html"><![CDATA[<blockquote>
<p>同事在使用 ElasticSearch 做全文搜索时，讨论到一个深度分页的问题，及现在购物网站的搜索结果，一般不超过100页的现象。借此，分析一个数据库对分页的设计与痛点。</p>
</blockquote>
<h4 id="limit-和-offset">LIMIT 和  OFFSET</h4>
<p>现在，MySQL是很多系统使用的关系型数据库，普通分页的SQL代码会是</p>
<pre><code>SELECT * FROM users LIMIT 10 OFFSET 51
</code></pre>
<p>这样子，可以查询得到第6页、每页10条的数据。</p>
<p>分页，普遍使用的是 LIMIT 和 OFFSET 来查询数据库数据的。比如，will_paginate 插件也是使用这一方法来生成分页的SQL语句的。</p>
<blockquote>
<p>This library was designed around the concepts of SQL LIMIT + OFFSET (to fetch a single page's worth of results), SQL COUNT (to calculate the total number of pages)</p>
</blockquote>
<figure data-type="image" tabindex="1"><img src="http://shatle.gitee.io/post-images/1598759020289.gif" alt="" loading="lazy"></figure>
<p>查询逻辑，对整个表进行逐行的偏移计算，当到达 OFFSET 的 50 条记录时，就会将后续的10条记录读取出来。Innodb引擎下的MySQL, OFFSET 查找时会通过B+树叶子结点的链表进行逐个跳转。</p>
<p>这个就相当于全表扫描。对于数据量少的系统来说，通过这样子的查询是没有问题的。但是数据量很大时，问题就是出现。</p>
<p>比如，表中有一百万个用户，OFFSET是 50 万，LIMIT 是 10。</p>
<pre><code>SELECT * FROM users LIMIT 10 OFFSET 500000
</code></pre>
<p>在没有查询条件的情况下，数据库需要先扫描前 50 万条的记录，再获取之后的 10 条记录的具体内容。这在逻辑上是合理的，但是耗时的。</p>
<hr>
<p>那分页有什么优化方法吗？</p>
<ul>
<li>增加硬件</li>
<li>避免全表扫描</li>
</ul>
<p>增加硬件显然不是很好的方案，因为数据会增加，不断地增加硬件会增加系统的运营成本。<br>
那么，需要做的是避免数据库的全表扫描操作。</p>
<p><strong>cursor-based pagination</strong></p>
<p>基于游标的分页方式，就是利用数据库的B+树索引，而不是通过叶子的节点的逐个扫描，才得到偏移位。具体的查询为</p>
<pre><code>SELECT * FROM users LIMIT 10 OFFSET 85001;

SELECT * FROM users WHERE id &gt; 85000 LIMIT 10;
</code></pre>
<p>在正常的ID自增无删除的情况下，上方的查询语句是等价的。网上有相关的测试工具，</p>
<blockquote>
<p>https://www.db-fiddle.com/f/3JSpBxVgcqL3W2AzfRNCyq/1</p>
</blockquote>
<p>查询的耗时，第一个是 25ms，第二个不到 1ms。区别巨大的查询耗时，就是后者使用了游标分页查询(cursor-based pagination)。后者通过准确的告知数据库，读取的数据 id 是大于 85000 的，其中 id 是主键，是有索引的，可以通过索引快速定位开始的位置。然后，再读取后续的10条数据记录。</p>
<hr>
<p>那么，在前端页面上怎么去使用这一查询方法呢？</p>
<p>通常，页面的分页链接地址，是 <code>/query?page=1&amp;limit=10</code>。<br>
为了应用游标分页方法，前端需要将ID的值传递到后端，用来进行比较处理，<br>
所以，映射的地址需要调整为 <code>/query?limit=10&amp;id=1234</code>，需要传递游标的值到后端：</p>
<pre><code>SELECT * FROM users WHERE id &gt; 1234 ORDER BY id DESC LIMIT 10
</code></pre>
<p>虽然基于游标的查询方式，提升了很大的速度；但在实际的场景使用时，会遇到些问题：</p>
<p>一般来说，页面上的分页显示为</p>
<pre><code>[首页] ... [上一页] 12 [下一页] ... [最后一页]
</code></pre>
<p>生成相应链接的SQL会为</p>
<pre><code>&lt;!-- 首页 --&gt;
URL: ?id=FIRST&amp;limit=10
SQL: SELECT * FROM users WHERE ... ORDER BY ID ASC LIMIT 10

&lt;!-- 上一页 --&gt;
URL: ?id=ID&amp;limit=10
SQL: ?

&lt;!-- 12页 --&gt;
URL: ?id=ID&amp;limit=10
SQL: ?

&lt;!-- 下一页 --&gt;
URL: ?id=ID&amp;limit=10
SQL: ?

&lt;!-- 最后一页 --&gt;
URL: ?id=LAST&amp;limit=10
SQL: SELECT * FROM users WHERE ... ORDER BY ID DESC LIMIT 10
</code></pre>
<p>第一页和最后一页，都可以通过相反的排序来快速得到；</p>
<p>但，上面的代码中有问题，就是中间的三个链接地址，只有ID一个变量，其它是一样的。<br>
并不能直观地看出，这个链接指向的是哪一页。</p>
<pre><code>&lt;!-- 12页 --&gt;
URL: ?page=12&amp;id=ID&amp;limit=10
SQL: ?
</code></pre>
<p>在链接地址上添加上 page 参数，可以让前端直接了解到是哪页数据，</p>
<p>但后端并不是使用 page 参数进行分页的，是使用ID进行游标判断。<br>
那，这个链接会有问题是：后端怎么知道这连接是当前、上一页、下一页？</p>
<p>本质上说，需要让后端知道，使用哪个比较符号：&gt; 或者 &lt;</p>
<p>方法一，增加参数表示方向</p>
<pre><code>&lt;!-- 上一页 --&gt;
URL: ?page=11&amp;id=111&amp;limit=10&amp;drt=left
SQL: SELECT * FROM users WHERE id&lt;111 ORDER BY ID ASC LIMIT 10

&lt;!-- 12页 --&gt;
URL: ?page=12&amp;id=111&amp;limit=10
SQL: SELECT * FROM users WHERE id&gt;=ID ORDER BY ID ASC LIMIT 10

&lt;!-- 下一页 --&gt;
URL: ?page=13&amp;id=120&amp;limit=10&amp;drt=right
SQL: SELECT * FROM users WHERE id&gt;ID ORDER BY ID ASC LIMIT 10
</code></pre>
<p>假如，id有序递增，那么第12页的id序列为 111-120。<br>
当加载好当前页时，可以将第一个ID: 111 传递给上一页，将最后一个ID: 120 传递给下一页；</p>
<p>考虑到数据的增删，所以每一个当前、上一页、下一页，都是需要在每次请求时刷新的。</p>
<p>很显然，上面的方法是基于一个唯一有序的、建立有索引的字段才能使用的方法，实践中的场景很少能应用到这方法。</p>
<pre><code>参考链接

https://ivopereira.net/content/efficient-pagination-dont-use-offset-limit
http://mysql.rjweb.org/doc.php/pagination
http://mysql.rjweb.org/doc.php/lists
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[认识 Sketch]]></title>
        <id>http://shatle.gitee.io/post/ren-shi-sketch/</id>
        <link href="http://shatle.gitee.io/post/ren-shi-sketch/">
        </link>
        <updated>2020-08-09T13:09:02.000Z</updated>
        <content type="html"><![CDATA[<p>程序员，在编写开发技术方案时，或多或少都会需要绘制流程图。</p>
<p>我读书时一直使用的是Visio，电脑是Windows，工具也很巨硬的，很合理。我使用 Visio，只是会用基本的画框、连线的功能，最终形成一个业务或者算法的流程图。工作之后，换了电脑使用的是 Macbook，所以换成了 OmniGraffle，但使用需求并没有多大的变化，依然是画UML图。无论是Visio，或者是 OmniGraffle，都会有比较多的内置图形库，方便制作UML图。</p>
<p>最近，猎到一个技术博主 https://draveness.me/ ，他的技术学习生活很丰富，羡慕这种有空闲时间学习的工作。他的文章内容很好，其中的配图也比较暖和好看。他还专门为画图工具写了一篇文章，讲述了他的工具使用历程。美好的配图，是可以让人更加舒的，但也是需要学习和时间成本的。</p>
<blockquote>
<p>时间给予到耐性的事情上，是更加有价值的。</p>
</blockquote>
<p>最后，他提到现在已经转到了使用 Sketch，也有自己一套配置想法和方案，这点是极好的。</p>
<blockquote>
<p>知识和工具，通过思考和实践，形成自己的方法和技巧，是有价值的。</p>
</blockquote>
<p>最近，打算慢慢拾起多年写文章的习惯，即便是流水帐，也是可以的。文章，首先的对象是自己，先满足自己吐槽的痛点，再来满足他人的阅感吧。</p>
<p>工具，好的工具，应该是有好的扩展性的，就是别人可以通过编码的方式，引入各种方便工作的功能。所以，我下安装好 Sketch 之后，看到有“插件”的菜单栏时，先在网上探索到了个很好的相关网站 https://oursketch.com/。</p>
<p>outsketch中有很多插件，包括有 Measure 等。其中，令人惊喜的是，蚂蚁金服推出了 Kitchen 的插件，包括了 AntDesign 的整套组件，虽然没有试用，但看到介绍真是令人兴奋。蚂蚁金服出现了一系列提高工作效率的工具，为自己企业和整个行业都做出了很好的表率作用。</p>
<figure data-type="image" tabindex="1"><img src="http://shatle.gitee.io/post-images/1596978624042.png" alt="" loading="lazy"></figure>
<p>除了Kitchen之外，我还安装了 Arrows、Measure 等。Measure 是设计人员输出给开发人员的，我暂时是不需要的，但生成人名、Nearest8感觉还是很好玩的。</p>
<p>下一步，形成自己的些流程图的库，方便自己写方案和文章的素材，希望自己走起来。我已经躺下很久了。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[关于博客]]></title>
        <id>http://shatle.gitee.io/post/about-blog/</id>
        <link href="http://shatle.gitee.io/post/about-blog/">
        </link>
        <updated>2018-12-11T16:00:00.000Z</updated>
        <content type="html"><![CDATA[<p>前些天，坚持多年的古仔停更了他的博客，现在博客存在的价值似乎正在慢慢变弱。手机，作为当今人们出门必备的也是最重要的物件，正在逐渐占满了人们的眼睛。</p>
<figure data-type="image" tabindex="1"><img src="http://shatle.gitee.io/post-images/1596855389478.JPG" alt="" loading="lazy"></figure>
<p>抖音，一个娱乐到死的手机APP，常期霸榜各大应用商店。我下载过一次，当晚连续刷到了晚上11点左右，才不舍得去洗澡。上面有各类人群发布上去的视频，或是真实，或是演戏，但终究还是吸引眼球的。这一过程，我不用思考，忘记的烦恼，也忘记了时间。于是，我卸载了。</p>
<p>公众号，很多人都开了公众号，膀上微信这个大平台，可以让自己的文章更容易被其它人所熟知。相比，个人博客做SEO，公众号的推广似乎会更加简单些，可以分享到个人、群里。手机，收割着大家的碎片时间；公众号，通过手机微信，也会分享到这些碎片时间。公众号，也是个不错的选择，何必纠结于自己的搭建的博客网站呢？</p>
<p>好，此博客停了!!!</p>
<p>刚开始，就停止了，这就是我了吧。</p>
]]></content>
    </entry>
</feed>